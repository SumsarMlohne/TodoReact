{"version":3,"sources":["components/Todo.js","components/Form.js","components/FilterButton.js","App.js","index.js"],"names":["Todo","props","useState","isEditing","setEditing","newName","setNewName","editFieldRef","useRef","editButtonRef","wasEditing","value","ref","useEffect","current","usePrevious","editingTemplate","className","onSubmit","e","preventDefault","editTask","id","htmlFor","name","type","onChange","target","onClick","viewTemplate","defaultChecked","completed","toggleTaskCompleted","deleteTask","focus","Form","setName","addTask","autoComplete","FilterButton","aria-pressed","isPressed","setFilter","FILTER_MAP","All","Active","task","Completed","FILTER_NAMES","Object","keys","App","tasks","setTasks","filter","updatedTasks","map","remainingTasks","editedTaskList","taskList","key","filterList","tasksNoun","length","headingText","listHeadingRef","prevTaskLength","newTask","nanoid","tabIndex","aria-labelledby","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.02aefe76.chunk.js","sourcesContent":["import React, {useState, useRef, useEffect} from 'react';\r\n\r\nfunction usePrevious(value){\r\n    const ref = useRef();\r\n    useEffect(() =>{\r\n        ref.current = value;\r\n    });\r\n    return ref.current;\r\n}\r\n\r\nexport default function Todo(props){\r\n\r\n    const [isEditing, setEditing] = useState(false);\r\n    const [newName, setNewName] = useState('');\r\n\r\n    const editFieldRef = useRef(null);\r\n    const editButtonRef = useRef(null);\r\n\r\n    const wasEditing = usePrevious(isEditing);\r\n\r\n    function handleChange(e){\r\n        setNewName(e.target.value);\r\n    }\r\n\r\n    function handleSubmit(e){\r\n        e.preventDefault();\r\n        props.editTask(props.id, newName);\r\n        setNewName(\"\");\r\n        setEditing(false);\r\n    }\r\n\r\n    const editingTemplate = (\r\n        <form className=\"stack-small\" onSubmit={handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <label className=\"todo-label\" htmlFor={props.id}>\r\n              New name for {props.name}\r\n            </label>\r\n            <input \r\n                id={props.id} \r\n                className=\"todo-text\" \r\n                type=\"text\"\r\n                value={newName}\r\n                onChange={handleChange}\r\n                ref={editFieldRef}\r\n            />\r\n          </div>\r\n          <div className=\"btn-group\">\r\n            <button type=\"button\" className=\"btn todo-cancel\" onClick={() => setEditing(false)}>\r\n              Cancel\r\n              <span className=\"visually-hidden\">renaming {props.name}</span>\r\n            </button>\r\n            <button type=\"submit\" className=\"btn btn__primary todo-edit\">\r\n              Save\r\n              <span className=\"visually-hidden\">new name for {props.name}</span>\r\n            </button>\r\n          </div>\r\n        </form>\r\n      );\r\n      const viewTemplate = (\r\n        <div className=\"stack-small\">\r\n          <div className=\"c-cb\">\r\n              <input\r\n                id={props.id}\r\n                type=\"checkbox\"\r\n                defaultChecked={props.completed}\r\n                onChange={() => props.toggleTaskCompleted(props.id)}\r\n              />\r\n              <label className=\"todo-label\" htmlFor={props.id}>\r\n                {props.name}\r\n              </label>\r\n            </div>\r\n            <div className=\"btn-group\">\r\n              <button type=\"button\" className=\"btn\" onClick={() => setEditing(true)} ref={editButtonRef}>\r\n                Edit <span className=\"visually-hidden\">{props.name}</span>\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn__danger\"\r\n                onClick={() => props.deleteTask(props.id)}\r\n              >\r\n                Delete <span className=\"visually-hidden\">{props.name}</span>\r\n              </button>\r\n            </div>\r\n        </div>\r\n      );\r\n\r\n    useEffect(() =>{\r\n        if(!wasEditing && isEditing){\r\n            editFieldRef.current.focus();\r\n        } \r\n        if(wasEditing && !isEditing){\r\n            editButtonRef.current.focus();\r\n        }\r\n\r\n    }, [wasEditing ,isEditing])\r\n\r\n    return(\r\n        <li className=\"todo\">{isEditing ? editingTemplate : viewTemplate}</li>\r\n    );\r\n}","import React, {useState} from 'react';\r\n\r\nfunction Form(props){\r\n\r\n    const [name, setName] = useState('')\r\n\r\n    function handleSubmit(e){\r\n        e.preventDefault();\r\n        props.addTask(name);\r\n        setName(\"\");\r\n    }\r\n    \r\n    function handleChange(e){\r\n        setName(e.target.value)\r\n    }\r\n\r\n    return(\r\n        <form onSubmit={handleSubmit}>\r\n            <h2 className=\"label-wrapper\">\r\n            <label htmlFor=\"new-todo-input\" className=\"label__lg\">\r\n                What needs to be done?\r\n            </label>\r\n            </h2>\r\n            <input\r\n                type=\"text\"\r\n                id=\"new-todo-input\"\r\n                className=\"input input__lg\"\r\n                name=\"text\"\r\n                autoComplete=\"off\"\r\n                value={name}\r\n                onChange={handleChange}\r\n            />\r\n            <button type=\"submit\" className=\"btn btn__primary btn__lg\">\r\n                Add\r\n            </button>\r\n      </form>\r\n    )\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\n\r\nfunction FilterButton(props){\r\n    return(\r\n        <button \r\n          type=\"button\" \r\n          className=\"btn toggle-btn\" \r\n          aria-pressed={props.isPressed}\r\n          onClick={() => props.setFilter(props.name)}\r\n        >\r\n          <span className=\"visually-hidden\">Show </span>\r\n          <span>{props.name}</span>\r\n          <span className=\"visually-hidden\"> tasks</span>\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default FilterButton;","import React, {useState, useRef, useEffect} from 'react';\nimport Todo from './components/Todo';\nimport Form from './components/Form';\nimport FilterButton from './components/FilterButton';\nimport {nanoid} from 'nanoid';\n\nfunction usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nconst FILTER_MAP ={\n  All:() => true,\n  Active: task => !task.completed,\n  Completed: task => task.completed\n};\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\n\nfunction App(props) {\n\n  const [tasks, setTasks] = useState(props.tasks)\n  const [filter, setFilter] = useState(\"All\")\n\n  function toggleTaskCompleted(id){\n    const updatedTasks = tasks.map(task => {\n      if(id === task.id){\n        return{...task, completed: !task.completed}\n      }\n      return task;\n    });\n    setTasks(updatedTasks)\n  }\n\n  function deleteTask(id){\n    const remainingTasks = tasks.filter(task => id !== task.id);\n    setTasks(remainingTasks);\n  }\n\n  function editTask(id, newName){\n    const editedTaskList = tasks.map(task =>{\n      if(id === task.id){\n        return {...task, name: newName}\n      }\n      return task;\n    });\n    setTasks(editedTaskList);\n  }\n\n  const taskList = tasks\n  .filter(FILTER_MAP[filter])\n  .map(task => (\n    <Todo\n      id={task.id}\n      name={task.name}\n      completed={task.completed}\n      key={task.id}\n      toggleTaskCompleted={toggleTaskCompleted}\n      deleteTask={deleteTask}\n      editTask={editTask}\n    />\n  ));\n  const filterList = FILTER_NAMES.map(name =>(\n    <FilterButton \n      key={name} \n      name={name} \n      isPressed={name === filter}\n      setFilter={setFilter}\n    />\n  ));\n\n  \n  const tasksNoun = taskList.length !== 1 ? 'tasks' : 'task';\n  const headingText = `${taskList.length} ${tasksNoun} remaining`;\n\n  function addTask(name){\n    const newTask = {id: \"todo-\" + nanoid(), name: name, completed: false};\n    setTasks([...tasks, newTask]);\n  }\n\n  const listHeadingRef = useRef(null);\n  const prevTaskLength = usePrevious(tasks.length);\n\n  useEffect(() => {\n    if(tasks.length - prevTaskLength === -1){\n      listHeadingRef.current.focus();\n    }\n  }, [tasks.length, prevTaskLength])\n\n  return (\n    <div className=\"todoapp stack-large\">\n      <h1>TodoMatic</h1>\n      <Form addTask={addTask} />\n      <div className=\"filters btn-group stack-exception\">\n        {filterList}\n      </div>\n      <h2 id=\"list-heading\" tabIndex=\"-1\" ref={listHeadingRef}>\n        {headingText}\n      </h2>\n      <ul\n        //role=\"list\"\n        className=\"todo-list stack-large stack-exception\"\n        aria-labelledby=\"list-heading\"\n      >\n        {taskList}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nconst DATA = [\n  {id: \"todo-0\", name: \"Eat\", completed: true },\n  {id: \"todo-1\", name: \"Sleep\", completed: false },\n  {id: \"todo-3\", name: \"Repeat\", completed: false }\n];\n\nReactDOM.render(\n  <React.StrictMode>\n    <App  tasks={DATA} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}